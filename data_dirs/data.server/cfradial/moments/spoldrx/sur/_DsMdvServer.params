//======================================================================
//
// MEASURED RHI DATA OPTION - READ OPERATIONS ONLY.
//
//======================================================================
 
///////////// serve_rhi_data //////////////////////////
//
// Option to serve out data for measured RHIs.
//
// Normally a vertical section from polar radar data is served out as a 
//   reconstructed RHI. If this option is set, the server will try to read 
//   measured RHI data and return this. If the measured request fails, the 
//   server will revert to serving out the reconstructed RHI data.
//
//
// Type: boolean
//

serve_rhi_data = TRUE;

///////////// rhi_url /////////////////////////////////
//
// URL for measured RHI data.
//
//
// Type: string
//

// rhi_url = "mdvp:://181.30.169.202:0:relampago/cfradial/csu_chivo/rhi";
rhi_url = "mdvp:://front.eol.ucar.edu:8080:precip/cfradial/moments/spoldrx/rhi?use_http=true";

///////////// polar_rhi ///////////////////////////////
//
// Option to serve out polar data for RHI.
//
// If true, the raw polar RHI data is returned. If false, the RHI is 
//   remapped onto a grid with height in km.
//
//
// Type: boolean
//

polar_rhi = TRUE;

///////////// rhi_time_margin /////////////////////////
//
// Time margin when searching for RHIs.
//
// The server will look for RHI files, in time, before and after the 
//   main field file (PPI or SURVEILLANCE). This is the time margin for 
//   the search.
//
//
// Type: int
//

rhi_time_margin = 1500;

///////////// rhi_max_az_error ////////////////////////
//
// Maximum azimuth error for retrieving RHI.
//
// The user selects a vertical cross-section in the normal manner. The 
//   azimuth of the mid-point of the vert section is computed and the RHI 
//   closest to this azimuth is selected. If the azimuth difference 
//   between the selected azimuth and the closest RHI exceeds this max 
//   error, the RHI request fails and a normal vertical section is 
//   returned.
//
//
// Type: double
//

rhi_max_az_error = 3;

///////////// respect_user_rhi_distance ///////////////
//
// Option to respect user distance for measured RHI.
//
// If false (default) then the end points of the measured RHI are 
//   returned. If TRUE then the start point is the sensor but the end 
//   point is obtained by travelling in the direction of the RHI azimuth 
//   for the distance specified by the user.
//
//
// Type: boolean
//

respect_user_rhi_distance = TRUE;

